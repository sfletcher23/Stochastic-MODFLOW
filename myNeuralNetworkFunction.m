function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 08-May-2017 19:20:11.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx5 matrix, input #1
% and returns:
%   y = Qx2 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.0064824598155197;0.00102627899573938;-49800.4968343852;-49884.8303994214;36.5];
x1_step1.gain = [2.01491102535746;223.101608003652;3.79353203238287e-05;3.79258663041296e-05;0.0005534800055348];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.7074560807235967808;-0.57156446293187135321;0.97406585240143506166;-0.57012477009093609492;1.6177963885476620565;-41.125761822232625775;-33.976971406161375455;4.4341129767606686229;4.0961923489676133059;7.0554234786618401642];
IW1_1 = [0.4822292150584388537 0.027701286832393690746 0.40439390170651495771 0.50958388065946613743 -1.1885261624873881825;0.72068854693427997216 -0.010088826511059811181 0.38359658373171490187 0.50751007789685698146 -0.16885798100210611117;-0.33470812443629088806 -0.015505704837547856084 0.10513754175408034086 0.029975780790183606528 1.010924507298374353;0.69756452288684800411 -0.010090153402031567034 0.38830107677216102458 0.50820016929777589443 -0.16624911631851543858;1.5592698629061234605 -0.035868104713606262235 1.7261830456454871907 1.9162557618656752556 -2.6900226046830892912;-3.6887244579012463674 11.841468222030782087 21.489271117422202195 17.77260712260160247 0.091641444839715313631;-3.416716269109481896 9.7512498782138550268 15.32867312501586099 15.816453832167173488 0.078054722270631565761;1.1869747990164627449 -0.086986916455174256857 0.42540025843197121214 -0.46859287371727431637 -0.20489645195671321587;0.77567704101425949403 -0.060401307534409504063 -0.42956351418731975045 0.38394790013915086613 -0.15193408794616267143;4.1663112626997458321 -0.080928890204133754893 0.1437967431511573968 -0.0092598581303624163258 0.36799501137982920662];

% Layer 2
b2 = [4.7043011370502156865;3.9755649374899695303];
LW2_1 = [-0.058938204517427220108 -1.9131181779190327141 -0.076605030495919226863 1.9763918097609287639 0.013134318476374267151 -7.1683529142259629907 13.636514808845085156 2.2998296802285405072 -8.6023070437602431326 7.1394030463975779455;-0.05834682154554340916 -2.0137235458244875375 -0.075174582364200270845 2.0766708865519807325 0.012830919944548276057 -7.2045621796486551958 13.700117626697220885 -6.3989968788637767716 2.1533916180943291074 5.8418420235580814648];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [9.72847061151355e-05;9.72974024424386e-05];
y1_step1.xoffset = [0;0];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
